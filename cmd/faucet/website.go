// Code generated by go-bindata.
// sources:
// faucet.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _faucetHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x5a\xff\x73\xdb\xb6\x92\xff\xd9\xf9\x2b\xb6\xbc\xe4\x49\x3a\x9b\xa4\x6c\x27\x79\x3e\x89\x54\x27\x2f\xed\xeb\xe5\xbe\xb4\x9d\x26\x9d\xbb\x37\x6d\xe7\x06\x24\x56\x22\x62\x10\x60\x01\x50\xb2\xea\xd1\xff\x7e\x03\x80\xa4\x48\x49\x76\x93\x26\x77\xd3\xfc\xe0\x90\xc0\x62\x77\xb1\xfb\x59\xec\x62\xc5\xe4\x8b\xaf\xbe\x7b\xfd\xee\x1f\xdf\x7f\x0d\x85\x29\xf9\xe2\x49\x62\xff\x03\x4e\xc4\x2a\x0d\x50\x04\x8b\x27\x67\x49\x81\x84\x2e\x9e\x9c\x9d\x25\x25\x1a\x02\x79\x41\x94\x46\x93\x06\xb5\x59\x86\x37\xc1\x7e\xa2\x30\xa6\x0a\xf1\xd7\x9a\xad\xd3\xe0\xbf\xc3\x1f\x5f\x85\xaf\x65\x59\x11\xc3\x32\x8e\x01\xe4\x52\x18\x14\x26\x0d\xde\x7c\x9d\x22\x5d\x61\x6f\x9d\x20\x25\xa6\xc1\x9a\xe1\xa6\x92\xca\xf4\x48\x37\x8c\x9a\x22\xa5\xb8\x66\x39\x86\xee\xe5\x02\x98\x60\x86\x11\x1e\xea\x9c\x70\x4c\x2f\x83\xc5\x13\xcb\xc7\x30\xc3\x71\x71\x7f\x1f\x7d\x8b\x66\x23\xd5\xed\x6e\x37\x83\x57\xb5\x29\x50\x18\x96\x13\x83\x14\xfe\x4e\xea\x1c\x4d\x12\x7b\x4a\xb7\x88\x33\x71\x0b\x85\xc2\x65\x1a\x58\xd5\xf5\x2c\x8e\x73\x2a\xde\xeb\x28\xe7\xb2\xa6\x4b\x4e\x14\x46\xb9\x2c\x63\xf2\x9e\xdc\xc5\x9c\x65\x3a\x36\x1b\x66\x0c\xaa\x30\x93\xd2\x68\xa3\x48\x15\x5f\x47\xd7\xd1\x5f\xe3\x5c\xeb\xb8\x1b\x8b\x4a\x26\xa2\x5c\xeb\x00\x14\xf2\x34\xd0\x66\xcb\x51\x17\x88\x26\x80\x78\xf1\xc7\xe4\x2e\xa5\x30\x21\xd9\xa0\x96\x25\xc6\xcf\xa3\xbf\x46\x53\x27\xb2\x3f\xfc\xb8\x54\x2b\x56\xe7\x8a\x55\x06\xb4\xca\x3f\x58\xee\xfb\x5f\x6b\x54\xdb\xf8\x3a\xba\x8c\x2e\x9b\x17\x27\xe7\xbd\x0e\x16\x49\xec\x19\x2e\x3e\x89\x77\x28\xa4\xd9\xc6\x57\xd1\xf3\xe8\x32\xae\x48\x7e\x4b\x56\x48\x5b\x49\x76\x2a\x6a\x07\x3f\x9b\xdc\x87\x7c\xf8\xfe\xd0\x85\x9f\x43\x58\x29\x4b\x14\x26\x7a\xaf\xe3\xab\xe8\xf2\x26\x9a\xb6\x03\xc7\xfc\x9d\x00\xeb\x34\x2b\xea\x2c\x5a\xa3\xb2\xc8\xe5\x61\x8e\xc2\xa0\x82\x7b\x3b\x7a\x56\x32\x11\x16\xc8\x56\x85\x99\xc1\xe5\x74\xfa\x6c\x7e\x6a\x74\x5d\xf8\x61\xca\x74\xc5\xc9\x76\x06\x4b\x8e\x77\x7e\x88\x70\xb6\x12\x21\x33\x58\xea\x19\x78\xce\x6e\x62\xe7\x64\x56\x4a\xae\x14\x6a\xdd\x08\xab\xa4\x66\x86\x49\x31\xb3\x88\x22\x86\xad\xf1\x14\xad\xae\x88\x38\x5a\x40\x32\x2d\x79\x6d\xf0\x40\x91\x8c\xcb\xfc\xd6\x8f\xb9\x68\xee\x6f\x22\x97\x5c\xaa\x19\x6c\x0a\xd6\x2c\x03\x27\x08\x2a\x85\x0d\x7b\xa8\x08\xa5\x4c\xac\x66\xf0\xb2\x6a\xf6\x03\x25\x51\x2b\x26\x66\x30\xdd\x2f\x49\xe2\xd6\x8c\x49\xec\x0f\xae\x27\x67\x49\x26\xe9\xd6\xf9\x90\xb2\x35\xe4\x9c\x68\x9d\x06\x07\x26\x76\x07\xd2\x80\xc0\x9e\x43\x84\x89\x76\x6a\x30\xa7\xe4\x26\x00\x27\x28\x0d\xbc\x12\x61\x26\x8d\x91\xe5\x0c\x2e\xad\x7a\xcd\x92\x03\x7e\x3c\xe4\xab\xf0\xf2\xaa\x9d\x3c\x4b\x8a\xcb\x96\x89\xc1\x3b\x13\x3a\xff\x74\x9e\x09\x16\x09\x6b\xd7\x2e\x09\x2c\x49\x98\x11\x53\x04\x40\x14\x23\x61\xc1\x28\x45\x91\x06\x46\xd5\x68\x71\xc4\x16\xd0\x3f\xfe\x1e\x38\xfd\x8a\xcb\x56\xaf\x98\xb2\x75\xb3\xad\xde\xe3\xc1\x0e\x1f\xde\xc4\x0d\x34\x0f\x72\xb9\xd4\x68\xc2\xde\x9e\x7a\xc4\x4c\x54\xb5\x09\x57\x4a\xd6\x55\x37\x7f\x96\xb8\x51\x60\x34\x0d\x6a\xc5\x83\xe6\xf8\x77\x8f\x66\x5b\x35\xa6\x08\xba\x8d\x4b\x55\x86\xd6\x13\x4a\xf2\x00\x2a\x4e\x72\x2c\x24\xa7\xa8\xd2\xe0\xad\xcc\x19\xe1\x20\xfc\x9e\xe1\xc7\x1f\xfe\x03\x1a\x97\x31\xb1\x82\xad\xac\x15\xfc\xbb\xdc\x10\x4e\x80\x50\x6a\xc1\x1a\x45\x51\x4f\x0d\x87\xdc\x63\x45\xc3\xcc\x88\x3d\xd5\x59\x92\xd5\xc6\xc8\x8e\x30\x33\x02\x32\x23\x42\x8a\x4b\x52\x73\x03\x54\xc9\x8a\xca\x8d\x08\x8d\x5c\xad\x6c\x9e\xf3\x5b\xf0\x8b\x02\xa0\xc4\x90\x66\x2a\x0d\x5a\xda\xd6\x83\x44\x57\xb2\xaa\xab\xc6\x87\x7e\x10\xef\x2a\x22\x28\x52\xeb\x71\xae\x31\x58\x7c\xc3\xd6\x08\x25\xc2\xed\x8f\x6f\xbf\x82\xb3\x43\x40\xe4\x44\xa1\x09\xfb\x4c\x8f\x60\x91\xc4\x5e\x19\xbf\x25\x68\xfe\x25\x35\x6f\x39\x75\x5b\x28\x51\xd4\x30\x78\x0b\x95\x3d\x55\x82\xc5\xfd\xbd\x22\x62\x85\xf0\x94\xd1\xbb\x0b\x78\x4a\x4a\x59\x0b\x03\xb3\x14\xa2\x57\xee\x51\xef\x76\x03\xee\x00\x09\x67\x8b\x84\x3c\x06\x6e\x90\x22\xe7\x2c\xbf\x4d\x03\xc3\x50\xa5\xf7\xf7\x96\xf9\x6e\x37\x87\xfb\x7b\xb6\x84\xa7\xd1\x0f\x98\x93\xca\xe4\x05\xd9\xed\x56\xaa\x7d\x8e\xf0\x0e\xf3\xda\xe0\x78\x72\x7f\x8f\x5c\xe3\x6e\xa7\xeb\xac\x64\x66\xdc\x2e\xb7\xe3\x82\xee\x76\x56\xe7\x46\xcf\xdd\x0e\x62\xcb\x54\x50\xbc\x83\xa7\xd1\xf7\xa8\x98\xa4\x1a\x3c\x7d\x12\x93\x45\x12\x73\xb6\x68\xd6\x0d\x8d\x14\xd7\x7c\x8f\x97\xd8\x02\xa6\x43\xb9\x0b\x1a\xa7\x6a\x5f\xd3\x13\x31\xb0\x0a\x3b\xed\x1b\x3c\x68\x66\xf0\x16\xb7\x69\x70\x7f\xdf\x5f\xdb\xcc\xe6\x84\xf3\x8c\x58\xbb\xf8\xad\x75\x8b\x7e\x43\x8b\xd3\x35\xd3\xae\xa0\x5a\xb4\x1a\xec\xd5\xfe\xc0\xa0\x3e\x38\xb6\x8c\xac\x66\x70\x7d\xd5\x3b\xb3\x4e\xc5\xfb\xcb\x83\x78\xbf\x3e\x49\x5c\x11\x81\x1c\xdc\xdf\x50\x97\x84\xb7\xcf\x4d\xb4\xf4\x82\xef\x70\x51\x68\x4f\xe8\x4e\xb5\xee\xa4\x9f\xce\x41\xae\x51\x2d\xb9\xdc\xcc\x80\xd4\x46\xce\xa1\x24\x77\x5d\xb6\xbb\x9e\x4e\xfb\x7a\xdb\x42\x90\x64\x1c\xdd\xd9\xa2\xf0\xd7\x1a\xb5\xd1\xdd\x49\xe2\xa7\xdc\x5f\x7b\xa0\x50\x14\x1a\xe9\x81\x35\xac\x44\x6b\x5a\x47\xd5\x73\x7d\x67\xcc\x93\xba\x2f\xa5\xec\x12\x48\x5f\x8d\x86\x75\x2f\xd7\x05\x8b\xc4\xa8\x3d\xdd\x59\x62\xe8\x47\x25\x00\x65\x0b\xbc\x87\xce\x7f\x7f\xa2\xd9\xbd\x57\x88\xca\x57\x17\x16\xb2\xe0\x5e\x93\xd8\xd0\x4f\x90\x6c\x41\x98\x11\x8d\x1f\x22\xde\xe5\xf9\xbd\x78\xf7\xfa\xa9\xf2\x0b\x24\xca\x64\x48\xcc\x87\x28\xb0\xac\x05\xed\xed\xdf\x9e\x9d\x9f\x2a\xbf\x16\x6c\x8d\x4a\x33\xb3\xfd\x50\x05\x90\xee\x35\xf0\xef\x43\x15\x92\xd8\xa8\xc7\xa1\xd6\x7f\xf9\x4c\xb1\xfd\x7b\xf5\xc8\xf5\xe2\x5f\xe5\x06\xa8\x44\x0d\xa6\x60\x1a\x6c\x66\xfd\x32\x89\x8b\xeb\x8e\xa4\x5a\xbc\xb3\x13\x2e\x1f\x2d\x5d\x59\x01\x4c\x83\xaa\x85\xcb\xba\x52\x80\x29\x70\x58\x8a\x34\x09\x3a\x82\x77\xd2\x96\x73\x6b\x14\x06\x4a\xc2\x59\xce\x64\xad\x81\xe4\x46\x2a\x0d\x4b\x25\x4b\xc0\xbb\x82\xd4\xda\x58\x46\xf6\xf0\x20\x6b\xc2\xb8\x8b\x24\xe7\x50\x90\x0a\x48\x9e\xd7\x65\x6d\xcb\x51\xb1\x02\x14\xb2\x5e\x15\x5e\x15\x23\xc1\x67\x25\x2e\xc5\xaa\x53\x47\x57\xa4\x04\x62\x0c\xc9\x6f\xf5\x05\xb4\x47\x02\x10\x85\x60\x18\x52\xbb\x2a\x97\x65\x29\x05\x5c\x2b\x0a\x15\x51\x66\x0b\x7a\x58\x56\x90\x3c\x77\x29\x2e\x82\x57\x62\x2b\x05\x42\x41\xd6\x4e\x41\x78\xe7\x6f\x12\x17\xf0\x8d\x94\x2b\x8e\xe7\x56\xbf\xbf\x93\x1c\x33\x29\xbb\x65\x50\x92\x6d\x2b\xb7\xd9\xc5\x86\x99\x82\x79\x33\x55\xa8\x4a\xcb\x83\x02\x67\x25\x33\x3a\x4a\xe2\x6a\x7f\xae\xee\x33\x34\x0f\x0b\xa9\xd8\x6f\xb6\xb8\xe1\xfd\x43\xd4\x1c\x1c\x31\xed\x09\xe9\x9c\xcf\x71\x69\x66\xf0\xdc\x9f\x90\x87\x70\x6e\x6e\x41\xa7\xb0\xdc\xf2\x74\xb7\x4b\x9b\x76\x66\x70\xed\x4b\x5a\x5f\x4e\x50\xd3\xd3\x80\x1e\x20\xce\x0b\xbd\xb9\xa9\xee\x3a\x3d\xba\xba\x78\xda\x31\xb1\x48\x18\x1a\x65\xcd\x7a\xf6\x2c\xc9\x2d\x02\x81\x84\x1c\xdc\x92\x1b\xa5\xdd\x1d\x8b\xb9\x1e\x41\x6c\x36\x88\xe6\x4b\x1b\xc1\xe9\x0f\x9e\x21\x13\xab\x67\x57\x53\x8f\x4c\xfb\x60\xd9\x3f\xbb\x9a\x32\x61\xe4\xb3\xab\xe9\xf4\x6e\xfa\x81\xff\x9e\x5d\x4d\xa5\x78\x76\x35\x35\x05\x3e\xbb\x9a\x3e\xbb\xba\xee\x63\xda\x8f\xf8\xea\xd2\xd2\xa0\xb6\xb2\x5a\xa0\x07\x60\x88\x5a\xa1\x49\x83\xff\x21\x99\xac\xcd\x2c\xe3\x44\xdc\x06\x0b\xa7\xac\xad\x38\x1c\x06\x4e\x55\xa8\x50\x11\x6d\xe1\x60\xb5\x75\x08\x69\x7a\x21\x1a\xc6\xba\x56\x4a\xd6\xc2\xe6\x45\xb0\xfb\x75\x41\x2a\x46\x16\x61\xd6\x28\x93\x28\xc9\x54\xbc\x78\x2d\xab\x6d\xe8\x98\xb8\xe5\x47\x26\xd4\x75\x55\x49\x65\xa2\xbe\x29\x89\xbd\x07\x71\xd4\xf1\xcd\xf4\xc5\xcd\xcb\x47\x95\xd7\xb6\xca\x76\x3b\xe8\x34\x24\x99\x5c\x23\xf8\x9a\x3e\x93\x77\x40\x04\x85\x25\x53\x08\x64\x43\xb6\x5f\x24\x31\x75\x37\xb0\x4f\x47\xec\xca\x05\x59\x58\xf1\x5a\xdb\x22\x84\xd9\x20\xfd\x53\xc1\xd7\x9f\x02\xf0\x3d\xaf\xf5\x05\x54\x75\xc6\x99\x2e\x80\x80\xc0\x0d\x24\xda\x28\x29\x56\x0b\x37\x9a\xdb\x1b\xaa\x7b\x85\x4a\x6a\xf3\x30\x16\xb0\xcc\x90\xd2\x13\x68\xf8\x83\x60\xb0\xd2\x9c\x03\xff\xff\x9d\xb7\x6c\x8e\xc5\x3f\x95\xc3\xda\xb3\xfa\xcf\xe9\xad\xa3\xd0\xdd\x6c\x36\x51\x6b\x47\x17\xb7\x05\xf2\x2a\xb6\xe9\xab\x16\xcc\x6c\x63\x7f\xfa\x49\x11\x7f\xc9\x68\x7a\x75\x73\xf5\xf2\xe5\xd5\xf3\x7f\xb9\x79\xf1\xe2\xea\xe6\xf9\x8b\x87\x82\xba\x83\xc4\x1f\x8f\x69\x7f\x07\xfa\x56\xbe\xaa\x4d\xd1\x5d\x80\x3c\x5a\xda\xc2\xdb\xd6\x57\xd4\x5e\x20\x55\xf0\x87\x11\x54\x0b\x5b\x45\x86\x84\x9f\x2c\x00\x3f\x02\x43\x0e\x44\x8f\x68\xf6\x89\xc0\x6a\xc1\x63\x71\x22\x6b\x63\x77\xd8\xf6\x61\x98\x14\x1d\x98\x2e\x40\xb3\xb2\xe2\x5b\xc8\xf7\x5e\x3f\x85\xaa\x07\x5d\xf2\xbb\xa0\x1a\x3a\xcd\x43\xcc\x55\x6e\xa5\xa4\x68\x4b\x36\x5d\xeb\x1c\x2b\xd7\x9e\xb7\x75\xd0\xdf\xb6\xbf\x11\x61\x98\xc0\xb6\x5e\x8a\xe0\x3b\xc1\xb7\x50\x6b\x84\xa5\x54\x40\x31\xab\x57\x2b\x57\xe3\x29\xa8\x14\x5b\x13\x83\x6d\x91\xa4\x1b\x4c\x74\x90\xe8\x5d\x4a\x6d\xb9\xca\x7b\xd5\xe3\x3f\x64\x0d\x39\x11\x60\x14\xc9\x6f\x7d\x9c\xd4\x4a\xd9\x38\xa9\xd0\xef\xa6\x2b\xd3\x32\xe4\x72\xe3\x48\xfc\xbe\x97\x0c\xb9\xab\xd9\x34\x22\x14\x72\x03\x65\x9d\xbb\x60\xb4\x35\x99\xdb\xc4\x86\x30\x03\xb5\x30\x8c\x7b\x6b\x9a\x5a\x09\x5b\xe1\xe1\xa0\xb4\x3a\xba\xb6\x27\x58\x2e\xde\x15\x78\xa2\x9e\xed\x2e\xdc\xa0\xf0\xb5\x27\x87\x4a\x49\x83\xb9\x75\x27\x90\x15\x61\x42\x5b\x8f\xb8\xe2\x0d\xcb\x0f\xb8\x90\x77\x4f\xcd\xc3\xbe\xb5\xec\xa6\xe3\x18\xbe\xe1\x32\x23\x1c\xd6\x16\xe7\x19\xb7\xa5\xb8\x84\x42\xda\xad\xf7\xac\xa5\x0d\x31\xb5\x06\xb9\x74\xa3\x5e\x73\xbb\x7e\x4d\x94\xf5\x20\x96\x95\x81\xb4\x69\x8c\xda\x31\x8d\x6a\xdd\xb4\x7b\xed\xab\x61\xa8\x06\xf3\x9d\xd5\x53\xf8\xe9\x97\xf9\x93\x46\x95\xaf\x70\xe9\x20\x61\xd1\xed\xb7\x6c\x0a\x62\x20\x57\x48\x0c\x6a\xc8\xb9\xd4\xb5\xf2\x1a\x52\x25\x2b\xb0\x5a\xb6\x9c\x5a\xce\x76\xa2\x72\xd2\x5a\x26\xe3\x82\xe8\x62\xd2\xf4\x75\x15\x3a\x2f\x75\x73\xed\xf8\x99\x45\xdd\xd8\x32\x60\xe9\x74\x0e\x2c\x69\xf9\x46\x1c\xc5\xca\x14\x73\x60\xe7\xe7\x1d\xf1\x19\x5b\xc2\xb8\xa5\xf8\x89\xfd\x12\x99\xbb\xc8\x4a\x81\x34\x85\xbe\x34\x27\xb0\xe1\xa3\x2b\xce\x72\x1c\xb3\x0b\xb8\x9c\xcc\xdb\xd9\x4c\x21\xb9\x6d\xdf\x1a\x3f\xfa\xff\xdc\xdf\xdd\x7c\x68\x19\x67\xfc\x81\x6d\x7c\xdb\x46\x03\x81\x15\xd3\x06\x6a\xc5\xa1\x89\x61\xef\x82\xce\x21\x8e\xae\x6f\x95\x23\x5c\x36\x0f\x0d\xa6\xda\x2d\x78\x36\x91\x46\x41\xc7\xff\xf6\xf6\xbb\x6f\x23\x6d\x14\x13\x2b\xb6\xdc\x8e\xef\x6b\xc5\x67\xf0\x74\x1c\xfc\x53\xad\x78\x30\xf9\x69\xfa\x4b\xb4\x26\xbc\xc6\x0b\xe7\xef\x99\xfb\x7b\x24\xe5\x02\x9a\xc7\x19\x0c\x05\xee\x26\x93\xf9\xe9\x16\x57\xaf\x23\xa7\x50\xa3\x19\x5b\xc2\x0e\xf8\x87\x36\x22\x50\xa2\x29\xa4\x0b\x5d\x85\xb9\x14\x02\x73\x03\x75\x25\x45\x63\x12\xe0\x52\xeb\x3d\x10\x5b\x8a\xf4\x18\x14\x0d\x7d\xea\x12\xf5\x7f\x61\xf6\x56\xe6\xb7\x68\xc6\xe3\xf1\x86\x09\x2a\x37\x11\x97\xfe\xa0\x8d\x6c\x90\xca\x5c\x72\x48\xd3\x14\x9a\x1c\x1a\x4c\xe0\x4b\x08\x36\xda\x66\xd3\x00\x66\xf6\xd1\x3e\x4d\xe0\x1c\x0e\x97\x17\x36\xd7\x9f\x43\x10\x93\x8a\x05\x13\x1f\x0e\xad\xe1\xa5\x28\x51\x6b\xb2\xc2\xbe\x82\xee\x5a\xdb\x81\xcc\xee\xa3\xd4\x2b\x48\xc1\x39\xa8\x22\x4a\xa3\x27\x89\x28\x31\xa4\x45\x9b\xc5\xac\x23\x4b\x53\x10\x35\xe7\x7b\x90\xfa\xa0\x98\xb7\xf0\x1b\x90\x47\x3e\xd3\x7c\x91\xa6\x50\x0b\xea\x4c\x4c\xf7\x2b\xad\xf3\x7d\xff\x63\x12\xd9\xbc\xb0\x5f\x31\x99\xf7\xd1\x3c\xe0\x86\xf4\xf7\xd8\x21\x3d\xe4\x87\xf4\x01\x86\xae\xdd\xf4\x18\x3f\xdf\x9e\xea\xb1\x73\x03\x0f\x70\x13\x75\x99\xa1\x7a\x8c\x9d\x6f\x37\x35\xec\x9c\xa9\xdf\x08\xd3\x5b\x7b\x01\x97\x2f\x27\x0f\x70\x47\xa5\xe4\x83\xcc\x85\x34\xdb\xf1\x3d\x27\x5b\x5b\x31\xc1\xc8\xc8\xea\xb5\x6b\x0f\x8d\x2e\x5c\xc6\x9d\x41\xc7\xe1\xc2\xf5\xfd\x67\x30\x72\x6f\x76\x9e\x95\xe8\x56\xbd\x98\x4e\xa7\x17\xd0\xfe\x5c\xf6\x37\x62\x83\x50\xd5\xb8\x7b\x40\x1f\x5d\xe7\xb9\xcd\xfb\x9f\xa2\x51\xc3\xa3\xd3\xa9\x79\xff\x04\xad\xba\xdc\x30\x50\x0b\xfe\xf2\x17\x38\x9a\x1d\xc2\x38\x8e\xe1\x3f\x89\xba\x75\xdd\x9c\x4a\xe1\xda\x75\x7c\x3a\xfa\x92\x69\xed\x5a\x29\x1a\xa8\x14\xd8\xac\xf9\xb8\x63\xff\x48\xc7\x86\x0c\x16\x30\x3d\x54\xd0\x1e\x87\xbd\xb4\x70\x22\x5b\xf4\xf8\x0e\x13\xc1\xd9\xae\x2f\x6f\xb0\x92\x95\x08\x5f\xa4\x10\x04\xfd\xc5\x47\x14\x96\xa0\x63\x76\xa6\xd1\xbc\xf3\xbe\x18\x37\xd9\xf1\x54\xee\x9a\x5c\xc0\xf5\x74\x3a\x9d\x1c\x29\xb1\xdb\x9b\xf7\x55\x65\xcb\x26\x20\x62\xeb\x8e\xc4\xce\xb6\xae\x70\xb4\x25\x90\x3d\xd2\x38\xe4\x92\x73\x5f\xb3\x34\x4b\xad\x81\x9b\xd6\x57\x0a\xe1\xe5\xfc\x44\x16\xed\x59\xb2\xb7\xb5\x43\xf7\x9c\xb0\xfd\xa1\x8b\x86\x36\x3b\x20\x0e\x2f\x07\x4e\x19\xf8\xeb\xb4\x63\xce\x3a\xbd\xd9\xde\xa2\x07\xee\xda\xfb\xeb\xd0\x66\x3d\xfd\x3d\x9f\xf3\xcb\x0f\xdc\x46\x37\x5d\xd5\xba\x18\x1f\x28\x3a\x99\x1f\xfb\xe6\x8d\x41\x65\xab\x64\x69\x53\x96\xf5\x85\xbd\x08\x28\x3c\x72\x89\x2b\xd5\x15\x86\x0a\x05\x45\xd5\x96\x14\xbe\xb2\xb7\x05\xe0\xc0\x65\xfe\x4e\xd9\x87\xd3\x47\x06\x8c\x2b\xc9\xa4\x40\x00\x80\x83\x20\x70\x40\x1d\x20\xd5\x12\x23\x27\x95\x46\x0a\x29\xf8\xaf\x17\xc6\x93\xa8\x16\xec\x6e\x3c\x09\x9b\xf7\x43\x1e\xed\xfc\xbc\xbb\x24\xb6\x6a\x9f\xa7\x10\x24\x46\x01\xa3\xe9\x28\x80\xf3\x53\x21\x68\xb3\xee\x68\xb1\xd7\xa0\xbf\x14\x20\x31\x74\xe1\x7a\xd8\xfe\xb6\xf6\x73\x90\x91\xfc\x76\xe5\x2e\x42\x33\x5b\x6a\x8d\x8f\xd8\x92\x35\x31\x44\x39\xae\x93\x39\xec\xc9\x9b\x6b\x62\x6e\x9d\x33\x07\x7f\x1f\x75\xad\x72\xe8\x7e\x5d\x72\x6f\x99\x54\x14\x55\xa8\x08\x65\xb5\x9e\xc1\xf3\xea\x6e\xfe\x73\xfb\xeb\x9b\x6b\xe8\x3f\xaa\x6a\xa5\x70\x71\xa4\x51\xd3\x1a\x3e\x87\x20\x89\x2d\xc1\xef\xb1\xe9\x36\xdb\xff\x6a\x02\x4e\xfc\x6c\x01\xdd\x37\x0d\xcd\x78\xc9\x28\xe5\x68\x15\xde\xb3\xb7\xc1\x68\xfd\xdf\x0f\xa9\xa1\x48\x68\x7e\xaf\xd8\xaf\xd9\x01\x72\x8d\x8f\x2c\xe8\x7e\xfa\x18\x59\x00\x84\x76\xcb\xcc\xd9\xbc\xb9\x6a\xbb\x61\x35\x72\xb6\x68\xbe\x81\xa1\xb5\x72\xb5\xd6\x38\x6c\x00\x76\x01\x23\x6d\x6b\x3f\xaa\x47\x93\xa8\xa8\x4b\x22\xd8\x6f\x38\xb6\x79\x69\xe2\x6d\xe5\x7e\x4b\x09\x8e\x8f\xe4\x23\x65\xf6\x3f\x72\x8c\xda\x1c\x37\x6a\x8c\x38\x6a\xbd\xfb\x7c\x7f\xb3\x9f\xc1\x74\x3e\xfa\x48\x0b\x9d\x96\x12\x66\x44\x41\xff\x25\x6c\x93\x2f\x28\x69\xa5\xb7\x73\x19\x51\x23\xdf\xc7\x70\xf5\xb9\x90\x9b\x74\x74\x3d\xed\x94\xf4\x8e\x76\x7e\x1e\x35\x58\x3b\x72\x86\xd5\xb2\x0d\xcd\x05\x5c\x4f\x3f\x87\xb6\xbe\x17\x72\xb0\x03\xa3\x58\x85\x14\x48\x6e\xd8\x1a\xff\x0f\x36\xf2\x19\x8c\xfc\xd1\x2a\x5a\x1c\xb6\xc6\x73\x30\x1d\xe8\x6b\x67\x3b\xdb\xfe\xb3\x8d\x37\x88\x9d\x85\xcf\x21\x38\xb9\x91\x07\x91\x78\x40\x78\x10\xda\x0f\xc7\xbd\xfb\x71\x30\x38\xcc\x29\xb6\xda\xed\x7e\xd7\x9e\x44\x85\x29\xf9\x38\x48\x8c\xfb\xba\xc9\xea\xdc\x71\x70\x0c\xfc\xf0\xb0\xa4\xdb\x0d\x2f\x32\xf6\xfe\x8e\x07\xf7\x2c\xe8\x15\x27\xdd\x5d\xac\xad\x44\x60\xb7\xff\x08\x2c\x8e\xe1\xad\x21\xca\x00\x81\x1f\xdf\x40\x5d\x51\x62\x6c\xf6\x92\x60\xf3\xa3\xef\x38\xb7\x5f\x89\x65\x44\x69\x58\x4a\xb5\x21\x8a\x36\xfd\x19\x53\xe0\xd6\xfd\x10\xd7\x96\x7e\x1a\xcd\x1b\x7b\x8a\xad\x09\x1f\x1f\xdd\xfb\x9e\x8e\x47\x51\xdf\xe5\xa3\x49\x84\x24\x2f\x8e\x09\x5d\xc6\xea\xe4\xa6\xf0\xad\xbb\x02\x8c\x9f\x8e\x4d\xc1\xf4\x24\x22\xc6\xa8\xf1\x68\x00\x86\xd1\xc4\xfa\xf5\xb2\x77\x25\xeb\x96\x27\x83\xb0\x7a\x8c\xc7\xbe\x98\xee\x0a\x81\x96\x3c\xd7\x7a\xec\x71\x35\xba\xe8\xf1\x1e\xc2\x6a\xf4\x6c\xd4\x39\x6a\x1f\xde\xfb\x7d\xa4\x27\x35\x19\xb0\x1e\xd9\x28\x1b\x1d\x89\x27\x94\xbe\xb6\xf1\x33\x0e\x4e\x44\xfa\x21\x3a\x26\x9d\xb1\xfd\x79\xfd\xa8\x95\xfd\x17\x35\x0f\x98\x98\xd1\xd1\x24\xd2\x75\xe6\x7b\x13\xe3\x17\xdd\x05\xac\x25\x73\xe0\x3d\x4c\x05\x47\x05\x85\x15\x31\x2c\x2a\xc2\x83\x22\xe4\x91\xac\xd1\x88\xf4\xbb\xda\x5d\x58\x83\x4f\x27\x5d\x6b\xeb\x6b\x6d\x8b\x2b\xdf\xf6\xdf\x60\xa6\x5d\x27\x01\x1a\xbc\xbb\x6e\x8e\xef\xda\xbc\xfa\xfe\x4d\xaf\x73\xd3\x45\xc4\xd8\x71\xef\x3e\xe0\x3c\xd5\x27\x39\xf9\xc5\xe8\x66\xb3\x89\xfc\x6f\x59\xae\x89\xdf\x35\x52\x62\x52\xb1\xe8\xbd\x0e\x80\xe8\xad\xc8\x81\xe2\x12\xd5\xa2\xc7\xbe\xe9\xae\x24\xb1\xff\x96\x31\x89\xfd\xe7\xda\xff\x1b\x00\x00\xff\xff\xac\x6f\xfb\x03\xbf\x2d\x00\x00")

func faucetHtmlBytes() ([]byte, error) {
	return bindataRead(
		_faucetHtml,
		"faucet.html",
	)
}

func faucetHtml() (*asset, error) {
	bytes, err := faucetHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "faucet.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"faucet.html": faucetHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"faucet.html": {faucetHtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
