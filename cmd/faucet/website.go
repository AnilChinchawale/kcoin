// Code generated by go-bindata.
// sources:
// faucet.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _faucetHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x7a\x6d\x73\xe3\x36\x92\xff\x6b\xf9\x53\x74\xf8\x9f\x59\x49\xff\x31\x49\xd9\x9e\x99\xf5\xc9\xa2\x52\xb3\x93\x6c\x6e\xee\x21\x49\x25\x93\xba\xdb\xca\xa6\xae\x20\xa2\x25\x62\x0c\x02\x0c\x00\x4a\x56\x5c\xfa\xee\x57\x0d\x90\x14\x25\xcb\x4e\x26\x99\xab\xdb\xf3\x0b\x99\x04\x81\xee\x46\xf7\xaf\x1f\xd0\xe4\xec\xb3\x2f\xbe\x79\xfb\xfe\x6f\xdf\x7e\x09\x85\x2b\xe5\xfc\x6c\x46\xff\x40\x32\xb5\xca\x22\x54\xd1\xfc\xec\x6c\x56\x20\xe3\xf3\xb3\xc1\xac\x44\xc7\x20\x2f\x98\xb1\xe8\xb2\xa8\x76\xcb\xf8\x3a\xea\xc6\x0b\xe7\xaa\x18\x7f\xae\xc5\x3a\x8b\xfe\x33\xfe\xe1\x4d\xfc\x56\x97\x15\x73\x62\x21\x31\x82\x5c\x2b\x87\xca\x65\xd1\xbb\x2f\x33\xe4\x2b\xdc\x2f\x53\xac\xc4\x2c\x5a\x0b\xdc\x54\xda\xb8\xde\xcc\x8d\xe0\xae\xc8\x38\xae\x45\x8e\xb1\xbf\x39\x07\xa1\x84\x13\x4c\xc6\x36\x67\x12\xb3\x0b\x12\x6e\x30\x73\xc2\x49\x9c\xdf\xdf\x27\x5f\xa3\xdb\x68\x73\xbb\xdb\x4d\xe1\x4d\xed\x0a\x54\x4e\xe4\xcc\x21\x87\xbf\xb2\x3a\x47\x37\x4b\xc3\x4c\x5a\x23\x85\xba\x85\xc2\xe0\x32\x8b\x48\x6e\x3b\x4d\xd3\x9c\xab\x0f\x36\xc9\xa5\xae\xf9\x52\x32\x83\x49\xae\xcb\x94\x7d\x60\x77\xa9\x14\x0b\x9b\xba\x8d\x70\x0e\x4d\xbc\xd0\xda\x59\x67\x58\x95\x5e\x25\x57\xc9\x9f\xd3\xdc\xda\xb4\x1b\x4b\x4a\xa1\x92\xdc\xda\x08\x0c\xca\x2c\xb2\x6e\x2b\xd1\x16\x88\x2e\x82\x74\xfe\xbb\xd8\x2e\xb5\x72\x31\xdb\xa0\xd5\x25\xa6\x2f\x93\x3f\x27\x13\xcf\xb1\x3f\xfc\x34\xd3\xb3\xc1\xcc\xe6\x46\x54\x0e\xac\xc9\x7f\x33\xdb\x0f\x3f\xd7\x68\xb6\xe9\x55\x72\x91\x5c\x34\x37\x9e\xcd\x07\x1b\xcd\x67\x69\x20\x38\xff\x23\xa4\x63\xa5\xdd\x36\xbd\x4c\x5e\x26\x17\x69\xc5\xf2\x5b\xb6\x42\xde\x32\xa2\x47\x49\x3b\xf8\xa9\xd8\x3e\x66\xbf\x0f\xc7\xe6\xfb\x04\xbc\x4a\x5d\xa2\x72\xc9\x07\x9b\x5e\x26\x17\xd7\xc9\xa4\x1d\x78\x48\x9e\xe8\x93\xbd\xe6\x67\x83\x41\xb2\x46\x43\x88\x95\x71\x8e\xca\xa1\x81\xfb\xb3\xc1\x60\x50\x0a\x15\x17\x28\x56\x85\x9b\xc2\xc5\x64\xf2\xfc\xe6\xc4\xe0\xba\xf0\xa3\x5c\xd8\x4a\xb2\xed\x14\x96\x12\xef\xfc\x08\x93\x62\xa5\x62\xe1\xb0\xb4\x53\x08\x54\x69\x7c\x77\x46\xec\x2a\xa3\x57\x06\xad\x0d\x7c\x2a\x6d\x85\x13\x5a\x4d\x09\x45\xcc\x89\x35\x9e\x98\x69\x2b\xa6\x8e\xa7\xb3\x85\xd5\xb2\x76\x78\x28\xc2\x42\xea\xfc\xd6\x0f\x79\xd7\xed\xc9\x9e\x6b\xa9\xcd\x14\x36\x85\x70\x7b\x16\x95\xc1\x86\x2e\xe3\x5c\xa8\xd5\x14\x5e\x57\x61\x0b\x25\x33\x2b\xa1\xa6\x30\x09\x73\x07\xb3\xb4\x51\xd8\x2c\x0d\x61\xe9\x6c\xb6\xd0\x7c\x4b\x96\xe2\x62\x0d\xb9\x64\xd6\x66\xd1\x91\x2a\x29\xdc\x1c\x3c\xa7\x28\xc3\x84\x6a\x9e\x1c\x3c\x32\x7a\x13\x81\xe7\x91\x45\x81\x79\xbc\xd0\xce\xe9\x72\x0a\x17\x24\x54\x58\x71\x44\x4d\xc6\x72\x15\x5f\x5c\x36\xcf\x06\xb3\xe2\xa2\x25\xe1\xf0\xce\xc5\xde\x0e\x9d\x05\xda\x59\x83\x99\x68\x29\x2c\x19\x2c\x59\xbc\x60\xae\x88\x80\x19\xc1\xe2\x42\x70\x8e\x2a\x8b\x9c\xa9\x91\x00\x23\xe6\xd0\x8f\x70\x8f\x04\xb8\xe2\xa2\x11\x2e\xe5\x62\x1d\x76\xb6\xbf\x3a\xda\xe3\xa3\xdb\xb8\x86\xe6\x42\x2f\x97\x16\x5d\xbc\xdf\x55\x6f\xae\x50\x55\xed\xe2\x95\xd1\x75\xd5\xdb\x0e\x0d\x82\xe0\x59\x54\x1b\x19\x35\xa1\xdd\x5f\xba\x6d\xd5\xe8\x22\xea\xb6\xac\x4d\x19\x93\x1d\x8c\x96\x11\x54\x92\xe5\x58\x68\xc9\xd1\x64\xd1\xf7\x3a\x17\x4c\x82\x0a\xbb\x85\x1f\xbe\xfb\x37\x68\x0c\x26\xd4\x0a\xb6\xba\x36\xf0\xaf\x7a\xc3\x24\x03\xc6\x39\x01\x33\x49\x92\xbd\x14\x1e\xa4\x0f\xc5\x8c\x17\x4e\x75\x93\x06\xb3\x45\xed\x9c\xee\xe6\x2d\x9c\x82\x85\x53\x31\xc7\x25\xab\xa5\x03\x6e\x74\xc5\xf5\x46\xc5\x4e\xaf\x56\x94\xc0\xc2\x06\xc2\xa2\x08\x38\x73\xac\x79\x94\x45\xed\xdc\xd6\x72\xcc\x56\xba\xaa\xab\xc6\x76\x61\x10\xef\x2a\xa6\x38\x72\xb2\xb4\xb4\x18\xcd\xbf\x12\x6b\x84\x12\xe1\xf6\x87\xef\xbf\x68\x65\x7a\x80\x87\x9c\x19\x74\x71\x9f\xf6\x03\x54\x74\xfb\x49\x83\x6c\xfb\x81\x5a\xb6\xc4\xba\xcd\x94\xa8\x6a\x38\xb8\x8b\x0d\x05\x91\x68\x7e\x7f\x6f\x98\x5a\x21\x3c\x13\xfc\xee\x1c\x9e\xb1\x52\xd7\xca\xc1\x34\x83\xe4\x8d\xbf\xb4\xbb\xdd\x5e\x4a\xb9\x67\x3b\x18\xcc\xd8\x53\x48\x07\xad\x72\x29\xf2\xdb\x2c\x72\x02\x4d\x76\x7f\x4f\x0c\x76\xbb\x1b\xb8\xbf\x17\x4b\x78\x96\x7c\x87\x39\xab\x5c\x5e\xb0\xdd\x6e\x65\xda\xeb\x04\xef\x30\xaf\x1d\x8e\xc6\xf7\xf7\x28\x2d\xee\x76\xb6\x5e\x94\xc2\x8d\xda\xe5\x34\xae\xf8\x6e\x47\x72\x37\xb2\xee\x76\x90\x12\x51\xc5\xf1\x0e\x9e\x25\xdf\xa2\x11\x9a\x5b\x08\xf3\x67\x29\xdb\x4b\x3c\x4b\xa5\x98\x37\x04\xf6\xda\xab\x65\x87\x9f\x94\x00\xd4\x42\xde\xbb\x8f\x17\xb6\x2f\xeb\x43\x7f\x58\xc5\x9d\xf8\x0d\x3c\xac\x70\x78\x8b\xdb\x2c\xba\xbf\xef\x2f\x6d\x9e\xe6\x4c\xca\x05\x23\xc5\x84\xbd\x75\x8b\x7e\x41\x42\xed\x5a\x58\x5f\x38\xcd\x5b\x01\xf6\xe2\xfe\x16\xdf\x3e\x8a\x5f\x4e\x57\x53\xb8\xba\x7c\x32\x78\xbd\x3e\xf2\xfa\xab\x53\x5e\x5f\x31\x85\x12\xfc\x6f\x6c\x4b\x26\xdb\xeb\xc6\x6d\xf6\x3e\x78\xbc\x26\xa6\x18\xdd\x89\xd5\x05\xf9\xc9\x0d\xe8\x35\x9a\xa5\xd4\x9b\x29\xb0\xda\xe9\x1b\x28\xd9\x5d\x97\xda\xae\x26\x93\xbd\xcc\x44\xd6\xb1\x85\x44\x1f\x60\x0c\xfe\x5c\xa3\x75\xb6\x0b\x27\xe1\x91\xff\xa5\xa8\xc2\x51\x59\xe4\x47\x8a\x20\x86\xa4\x52\x3f\x6b\x6f\xef\x56\x8b\x27\x05\x5f\x6a\xdd\x26\x90\xbe\x0c\x0d\xdd\x5e\x72\x8b\x7a\x10\x73\xa6\xef\x21\x8e\xff\x96\x64\x70\x2a\x00\x18\xaa\xea\x7e\xc5\xf3\xbb\x90\x47\x6a\xa9\x10\x4d\x28\x30\x08\xc3\xe0\x6f\x67\xa9\xe3\x9f\x46\x1c\x82\xe8\x82\x59\xfc\x38\x99\x7c\x29\xb0\x97\xc9\xdf\x7e\x42\xa1\x0a\x64\xc6\x2d\x90\xb9\x8f\x93\x6a\x59\x2b\xde\xd3\x14\xc5\xe1\x4f\x28\x54\xad\xc4\x1a\x8d\x15\x6e\xfb\xf1\x52\x21\xdf\x8b\x15\xee\x0f\xe5\x9a\xa5\x3d\x78\x3d\x01\xe6\xde\xf5\xff\x50\xcc\xe8\x17\x3c\x57\xf3\x7f\xd6\x1b\xe0\x1a\x2d\xb8\x42\x58\xa0\xcc\xfd\xf9\x2c\x2d\xae\xda\x19\xd5\xfc\x3d\x8d\x93\xa2\x61\xe9\xeb\x15\x10\x16\x4c\xad\x7c\x52\xd7\x0a\x5c\x81\x87\x35\x4e\x93\xff\x13\x78\xaf\xa1\x32\xb8\x46\xe5\xa0\x64\x52\xe4\x42\xd7\x16\x58\xee\xb4\xb1\xb0\x34\xba\x04\xbc\x2b\x58\x6d\x1d\x11\xa2\xa0\xc4\xd6\x4c\x48\xef\xa6\xde\xca\x8d\x6e\xb4\x01\x96\xe7\x75\x59\x53\x79\xab\x56\x80\x4a\xd7\xab\x22\x08\xe4\x34\x84\x94\x27\xb5\x5a\x75\x42\xd9\x8a\x95\xc0\x9c\x63\xf9\xad\x3d\x87\x36\xe4\x00\x33\x08\x4e\x20\xa7\x55\xb9\x2e\x4b\xad\xe0\xca\x70\xa8\x98\x71\x5b\xb0\x07\xb5\x4b\xc3\x9a\xe5\xb9\xcf\xa2\x09\xbc\x51\x5b\xad\x10\x0a\xb6\xf6\xc2\xc2\xfb\x70\x2c\x39\x87\xaf\xb4\x5e\x49\x7c\x01\xda\xc0\x5f\x59\x8e\x0b\xad\x6f\xa1\x59\x06\x25\xdb\xb6\xdc\xc3\x8e\x60\x23\x5c\x21\x82\xca\x2a\x34\x25\xd1\xe0\x20\x45\x29\x9c\x4d\x66\x69\xd5\x85\xee\x7d\x0d\x20\xe3\x42\x1b\xf1\x0b\x95\x51\xb2\x17\xa7\xdd\x51\x24\x6b\x83\xb0\xc7\x80\xc4\xa5\x9b\xc2\xcb\xa3\x20\x7c\x04\xf5\xe6\x60\x75\x0a\xe7\x2d\x6d\x7f\x5a\xa5\xd4\x36\x85\xab\x50\x42\xf7\x1c\x60\x96\x72\xb7\x97\x87\x1f\xc1\x30\x88\x70\x7d\x5d\xdd\x75\x52\x75\xd5\xf8\x91\x5c\x54\x23\xbf\xd7\x47\x8a\x5a\x8b\x9e\x8e\x4b\x76\x8b\xc0\xba\x05\xec\xe8\x28\xde\xec\xc4\x1f\xe6\x84\xef\x42\xa4\x6e\x83\xe8\x3e\x27\xef\xcf\xbe\x0b\x74\x85\x5a\x3d\xbf\x9c\x04\x00\xd3\x05\x71\x79\x7e\x39\x11\xca\xe9\xe7\x97\x93\xc9\xdd\xe4\x37\xfe\x3d\xbf\x9c\x68\xf5\xfc\x72\xe2\x0a\x7c\x7e\x39\x79\x7e\x79\xd5\x87\x7e\x18\x09\x35\x2e\xcd\x41\x4b\xbc\x5a\x7f\x88\xda\x1d\x80\x63\x66\x85\x2e\x8b\xfe\x8b\x2d\x74\xed\xa6\x0b\xc9\xd4\x6d\x34\xf7\x42\x53\xcd\xe3\x61\x72\xaa\x5e\x86\x8a\x59\x42\x0c\x49\xed\x41\xd4\x74\x5d\x2c\x8c\x6c\x6d\x8c\xae\x15\xe5\x67\xa0\x7d\x7b\x97\x56\x43\x02\x21\x29\x67\x9c\xec\x2b\x68\x93\xce\xdf\xea\x6a\x1b\x7b\x62\x44\xe6\x51\xcd\xda\xba\xaa\xb4\x71\x49\x5f\xc3\x8c\x4e\x68\x12\x6d\x7a\x3d\x79\x75\xfd\x3a\x7a\x6a\x2f\x96\x8e\x00\x7e\x43\x9d\xc0\x6c\xa1\xd7\x08\xe1\xc0\xb1\xd0\x77\xc0\x14\x87\xa5\x30\x08\x6c\xc3\xb6\x9f\xcd\x52\x4e\x27\xc3\x4f\x07\xf2\x95\xf7\xce\xb8\x92\xb5\xa5\x02\x49\x90\x8f\xff\x03\x23\x3e\x04\x13\xf8\x56\xd6\xf6\x1c\xaa\x7a\x21\x85\x2d\x80\x81\xc2\x4d\xb7\xd6\x3a\xa3\xd5\x6a\xee\x1f\xe6\x74\xa8\xf6\xb7\x50\x69\xeb\x1e\x87\x0d\x96\x0b\xe4\xfc\x04\x70\xfe\x18\x6e\x3c\x57\x6f\xe4\xff\x35\x03\x2f\x9b\x98\xfb\x0f\x6c\xd4\x36\x2d\xfc\x5f\xb0\xe8\xa3\x91\x60\xb3\xd9\x24\xad\xae\x7d\x18\x28\x50\x56\x29\x65\xd1\x5a\x09\xb7\x4d\x43\x8c\xd5\x2a\xfd\x5c\xf0\xec\xf2\xfa\xf2\xf5\xeb\xcb\x97\xff\x74\xfd\xea\xd5\xe5\xf5\xcb\x57\x8f\xc5\x88\x0e\x3d\xbf\x3b\x44\x84\x03\xde\xd7\xfa\x4d\xed\x8a\xee\x54\x48\xb0\x6a\x0f\x17\x54\xfe\x71\x3a\x21\x9b\xe8\x0f\x43\xad\x56\x54\x01\xc7\x4c\x9e\xac\x58\x7f\x17\xd8\x9e\x10\xf3\xd3\x00\xf0\x18\x64\x84\x27\x5d\x3b\xda\x7d\xdb\x86\x12\x5a\x75\xa0\x3b\x07\x2b\xca\x4a\x6e\x21\xdf\xa3\xe2\x14\xfa\x1e\xb5\xd5\x03\xf0\xb5\x02\x1c\x61\xf0\xd0\xa8\x87\x88\xf4\xe5\x66\xa9\x39\x52\x9d\x69\x6b\x9b\x63\xe5\xdf\x46\x50\xd9\xf6\x97\xed\x2f\x4c\x39\xa1\xb0\x2d\xef\x12\xf8\x46\xc9\x2d\xd4\x16\x61\xa9\x0d\x70\x5c\xd4\xab\x95\x2f\x4c\x0d\x54\x46\xac\x99\xc3\xb6\xa6\xb3\x0d\x76\x5a\xe8\xf4\x3a\x09\xb3\x94\xcb\x7d\xbd\xfb\x37\x5d\x43\xce\x14\x38\xc3\xf2\xdb\xe0\x5b\xb5\x31\xe4\x5b\x15\x86\x9d\x75\x25\xe5\x02\xa5\xde\xf8\x29\x41\x07\x4b\x81\xd2\xd7\x97\x16\x11\x0a\xbd\x81\xb2\xce\xbd\x03\x53\xe5\xe8\x77\xb0\x61\xc2\x41\xad\x9c\x90\x41\xb3\xae\x36\x8a\xaa\x51\xec\x17\x80\x8f\x35\x2e\xb0\x9c\xbf\x2f\xf0\x44\x19\xde\x75\x1e\xc0\xe0\xdb\xb0\x08\x2a\xa3\x1d\xe6\x64\x5f\x60\x2b\x26\x94\x25\x13\xf9\x3a\x13\xcb\x5f\xeb\x4c\xb4\x17\xcd\xff\xae\x9d\x4e\xcf\xd2\x14\xbe\x92\x7a\xc1\x24\xac\xc9\x0d\x16\x92\x8e\x0e\x1a\x0a\x4d\x3b\xef\x29\xcb\x3a\xe6\x6a\x0b\x7a\xe9\x47\x83\xcc\x67\x83\xc1\x9a\x19\x32\x1e\x96\x95\x83\x2c\xb4\x87\x69\xc8\xa2\x59\x87\x2e\x37\xdd\x39\x81\xa6\xff\xb4\x53\x78\x06\x3f\xfe\x74\x73\x16\xa4\xf8\x02\x97\x1e\x09\x04\xf5\xb0\x4f\x57\x30\x07\xb9\x41\xe6\xd0\x42\x2e\xb5\xad\x4d\x10\x8e\x1b\x5d\x01\x09\xd8\x12\x6a\xe8\xd2\x78\xe5\x59\x75\x34\x46\x05\xb3\xc5\x38\x74\xb5\x0d\x7a\xf3\xec\x9f\x35\xe3\x03\xc2\xda\x88\x08\x08\x2f\x25\x08\x98\x75\xa4\x13\x89\x6a\xe5\x8a\x1b\x10\x2f\x5e\xb4\xf3\x07\x62\x09\xa3\x76\xc2\x8f\xe2\xa7\xc4\xdd\x25\xc4\x07\xb2\x0c\x7a\xfc\x3c\xcb\x86\x8a\xad\xa4\xc8\x71\x24\xce\xe1\x62\x7c\xd3\x3c\x5c\x18\x64\xb7\xcd\x4d\xb0\x9d\xff\xa5\x9f\xdd\xcd\x81\x52\xbc\xca\x0f\xd4\x12\xfa\x55\x16\x18\xac\x84\x75\x50\x1b\x09\x8d\x13\x07\xd5\xb7\x76\xf0\xd3\x0e\x14\x72\x7f\x0f\x07\x70\x84\xdd\xae\xb9\xba\x87\x7b\x40\xc5\x61\x07\xbb\x66\x07\x81\x56\x62\x51\xf1\xd1\xbf\x7c\xff\xcd\xd7\x89\x75\x46\xa8\x95\x58\x6e\x47\xf7\xc4\x73\x0a\xcf\x46\xd1\xff\xab\x8d\x8c\xc6\x3f\x4e\x7e\x4a\xd6\x4c\xd6\x78\xee\xcd\x3d\xf5\xbf\x27\x78\x9d\x43\x73\x3d\x85\x87\x6c\x77\xe3\xf1\x0d\xd0\xfd\xa1\xc3\x00\xa9\xa4\xd7\x99\x34\x68\xd1\x8d\x9a\xa9\xcd\x52\xaf\xb9\x9b\x23\x28\x95\xe8\x0a\xed\x3d\xd8\x60\xae\x95\xc2\xdc\x41\x5d\x69\xd5\x28\x09\xa4\xb6\xb6\xc3\x64\x3b\x21\x7b\x88\x90\x66\x7a\x46\x99\x1e\xfe\x03\x17\xdf\xeb\xfc\x16\xdd\x68\x34\xda\x08\xc5\xf5\x26\x91\x3a\x84\xde\x84\xbc\x54\xe7\x5a\x42\x96\x65\xd0\xa4\xdb\x68\x0c\x9f\x43\xb4\xb1\x94\x78\x23\x98\xd2\x25\x5d\x8d\xe1\x05\x1c\x2f\x2f\xa8\x4a\x78\x01\x51\xca\x2a\x11\x8d\xbd\x67\xb4\x36\xd0\xaa\x44\x6b\xd9\x0a\x0f\xe4\xf3\xc7\xf1\x16\x6e\xb4\x8d\xd2\xae\x20\x03\x6f\xab\x8a\x19\x8b\x61\x46\xc2\x99\x63\x0d\xee\x08\xbb\x7e\x56\x96\x81\xaa\xa5\xec\xc0\x1a\xdc\xe3\xa6\x01\x62\x7f\x6e\x12\xca\x9f\xcf\xb2\x0c\x6a\xc5\xbd\x72\x79\xb7\x8c\x10\x10\xda\x38\xe3\x84\x72\xc4\x7e\xc1\xf8\x66\x0f\xea\x03\x52\xc8\x7f\x85\x16\xf2\x63\x62\xc8\x4f\x52\xf3\xad\xb5\x27\x88\x85\x4e\x5c\x8f\x96\x1f\x38\x49\x4a\xd5\xe5\x02\xcd\x13\xb4\x42\x07\xad\xa1\xe5\x95\xfb\x4e\xb9\xde\xd2\x73\xb8\x78\x3d\x3e\x49\x1a\x8d\xd1\x8f\x51\x56\xda\x91\x33\x49\xb6\xa5\x5a\x0a\x86\x4e\x57\x6f\x7d\x6b\x6b\x78\xee\x53\xee\x14\x3a\x0a\xe7\xfe\xfd\xc7\x14\x86\xfe\x8e\x9e\x8b\x12\xfd\xaa\x57\x93\xc9\xe4\x1c\xda\x17\x84\x7f\x61\xe4\x7e\xa6\x46\xd8\x9d\x14\xc7\xd6\x79\x4e\x79\xff\x8f\x08\xd4\xd0\xe8\x44\x6a\xee\x7f\xbf\x50\x5d\x4e\x38\x90\x0a\xfe\xf4\x27\x78\xf0\xf4\x00\xb5\x69\x0a\xff\xce\xcc\xad\xef\x38\x55\x06\xd7\xbe\x2b\xd5\x4d\x2f\x85\xb5\xbe\xc5\x63\x81\x6b\xd5\x14\xc4\x1f\x1d\xee\x1f\x08\xd9\xcc\x82\x39\x4c\x8e\x25\xa4\x38\xd8\x4b\x07\x27\xb2\xc4\x9e\xec\x41\x06\x18\xec\x7a\xcc\x0e\x96\x89\x12\xe1\xb3\x0c\xa2\xa8\xb7\xf2\xc1\x04\x7a\xde\x52\x1a\x58\x74\xef\x83\x19\x46\x4d\x4e\x3c\x95\xae\xc6\xe7\x70\x35\x99\x4c\xc6\x47\x02\xec\x3a\xc5\xbe\xa9\xa8\x44\x02\xa6\xb6\x3e\xf0\x75\x5a\xf5\x05\x23\x95\x3b\x14\xb8\x24\xe4\x5a\xca\x50\x9a\x84\x95\xa4\xda\xa6\x23\x97\x41\x7c\x71\xf3\x30\x67\xf6\xf4\xb7\xdf\xd3\x29\xb3\x9c\x50\xfa\x91\x69\x0e\xd5\x75\xcc\x20\x86\x8b\x03\x73\x1c\x58\xea\xa4\x49\x06\x9d\xe4\xa2\x53\xe7\xa1\x9d\x3a\x43\x1d\xea\xeb\x40\xfc\x86\xc8\x0b\xb8\xf8\xad\xfb\xe8\x9e\x56\xb5\x2d\x46\x47\x72\x8e\x6f\x8e\x4d\xf3\xce\xa1\xa1\x6a\x58\x53\x5e\x22\x53\x50\xfd\x6f\xf0\x81\x45\x7c\x69\x6e\x30\x36\xa8\x38\x9a\xb6\x90\x08\x05\x3d\x15\x7b\x7d\x8b\x85\x13\x67\x0f\x48\x1f\xef\x28\xbe\x0a\xd3\x8a\xe0\xf8\x10\xa1\x7d\x88\xd2\x44\x94\xac\xb2\xc8\x21\x83\xf0\x65\xc6\x68\x9c\xd4\x4a\xdc\x8d\xc6\x10\xb7\x23\xc7\x44\xda\x19\x37\xed\x99\xb1\x95\xfa\x45\x06\xd1\xcc\x19\x10\x3c\x1b\x46\xf0\xe2\x94\xdf\x51\x62\x1d\xce\x3b\x09\xfa\x2b\x01\x66\x8e\xcf\x7d\x6f\x3d\x1c\xd8\xfe\x1e\x2d\x58\x7e\xbb\xf2\x87\x9f\x29\x55\x3a\xa3\x07\x54\xd9\x9a\x39\x66\x3c\xd1\xf1\x0d\xec\xa7\x37\xc7\xc5\x9c\x2c\x73\x03\xe1\x7c\xea\x3b\xf8\xd0\xbd\x50\xf3\x77\x0b\x6d\x38\x9a\xd8\x30\x2e\x6a\x3b\x85\x97\xd5\xdd\xcd\xdf\xdb\x37\x8d\xfe\x55\xc3\x53\x92\x56\x06\xe7\x0f\x04\x6a\xfa\xd4\x2f\x20\x9a\xa5\x34\xe1\x57\xa8\x74\x5b\xed\x7f\x1b\x02\x27\xde\xb1\x40\xf7\x1d\x47\x33\x5e\x0a\xce\x25\x92\xb8\x1d\x75\xf2\x42\x32\x7c\xcf\x93\x0e\x19\x42\xf3\x16\xa5\x5b\xb1\x03\x94\x16\x1f\x9f\xde\xbd\x8e\x19\x92\xe1\x63\xda\xad\xf0\xda\x6e\xce\xd9\x7e\xd8\x0c\xbd\x1a\x9a\x2f\x7b\x78\x6d\x7c\x1d\x35\x8a\x1b\x68\x9d\xc3\xd0\x52\x5d\xc7\xed\x70\x9c\x14\x75\xc9\x94\xf8\x05\x47\x94\x85\xc6\x41\x4d\xfe\xfd\x4e\x74\x1c\x81\x1f\x88\xb2\x7f\xe9\x32\x6c\xf3\xd9\xb0\x51\xdf\xb0\xb5\xea\xcb\xfd\xa1\x7e\x0a\x93\x9b\xe1\x47\xe9\xe6\x34\x8f\x78\xc1\x0c\xf4\x6f\xe2\x36\xcd\x82\xd1\xc4\xbb\x7d\xb6\x60\x66\x18\xba\x18\xbe\x04\x57\x7a\x93\x0d\xaf\x26\x9d\x88\xc1\xc0\xde\xbe\xc3\x06\x61\xc7\x66\x20\x19\x5b\x7f\x9c\xc3\xd5\xe4\x13\xc8\x1a\x5a\x20\x47\xf2\x3b\x23\x2a\xe4\xc0\x72\x27\xd6\xf8\xe9\xb7\xf1\xc7\x15\xfc\xd1\x02\x12\xfe\x5a\xcd\x79\x78\x1e\x48\x4b\x4f\x3b\xc5\xfe\x7f\xf2\x31\x48\xbd\x7a\x5f\x40\x74\x6a\x1b\x8f\x21\xf0\x70\xda\x91\x2f\x3f\xea\xe7\xfe\x25\x65\x74\x98\x3c\xa8\x94\xed\xde\xdb\x8f\x93\xc2\x95\x72\x14\xcd\x9c\xff\x7c\x8b\xa4\xed\xd6\xfb\xe5\x61\xb8\x5f\xb1\xed\x0e\x0e\x25\x74\x2c\xc7\xe3\x23\x13\xf4\xea\x8f\xee\x5c\xd5\x16\x1b\xb0\x6b\xbe\x21\xa3\x34\xf6\xbd\x63\xc6\x01\x83\x1f\xde\x41\x5d\x71\xe6\x28\x45\x69\xa0\x14\x18\x3a\xd2\xed\x27\x6f\x0b\x66\x2c\x2c\xb5\xd9\x30\xc3\x9b\x7e\x8b\x2b\x70\xeb\x5f\x02\x36\x85\x9d\x45\xf7\x8e\xc2\xd5\x9a\xc9\xd1\x83\x03\xdc\xb3\xd1\x30\xe9\xdb\x79\x38\x4e\x90\xe5\xc5\xc3\x89\x3e\x31\x75\x6c\x33\xf8\xda\x97\xf6\xa3\x67\x23\x57\x08\x3b\x4e\x98\x73\x66\x34\x3c\x40\xc0\x70\x3c\xf6\x79\xbe\xab\x66\xbb\xd5\xb3\xbe\x1f\x3d\x45\x61\x5f\x25\xb7\x89\xbe\x9d\x9d\x5b\x3b\x0a\x48\x1a\x9e\xf7\x28\x1f\x02\x69\xf8\x7c\xd8\x1a\x68\xef\xcc\xfb\x3d\x64\xa7\xc4\x38\x20\x3c\x24\x9f\x1a\x1e\xf3\x66\x9c\xbf\x25\x77\x19\x45\x27\xdc\xfa\x10\x12\xe3\x56\xc7\x21\x26\x3f\xa9\xdc\xf0\x71\xd0\x23\x9a\x15\x7c\x38\x4e\x6c\xbd\x08\x7d\x86\xd1\xab\xf6\x3c\xd5\xce\xf2\x68\x3d\x8e\xf6\x0f\x6a\x05\xe2\x70\x58\x2f\xec\x2b\x8a\x76\xe4\x89\xd4\x10\x78\xfa\x4d\xed\xce\x49\xd3\x93\x71\xdb\xa4\xfa\xd2\x52\xd5\x14\xba\xfe\x1b\x5c\x58\xdf\x07\x80\x06\xe1\xbe\x39\x13\x9a\x30\x6f\xbe\x7d\xb7\x6f\xc4\x74\x2e\x40\x75\xcb\xa0\xfb\xec\xf4\x44\x5b\xf0\xe4\x67\xae\x9b\xcd\x26\x09\x6f\xbe\x7c\xab\xbe\x6b\x83\xa4\xac\x12\xc9\x07\x1b\x01\xb3\x5b\x95\x03\xc7\x25\x9a\x79\x8f\x7a\x68\x09\xce\xd2\xf0\x61\xe6\xd9\x2c\xf5\x5f\x96\xff\x77\x00\x00\x00\xff\xff\x7b\xbb\xf8\x88\x69\x2e\x00\x00")

func faucetHtmlBytes() ([]byte, error) {
	return bindataRead(
		_faucetHtml,
		"faucet.html",
	)
}

func faucetHtml() (*asset, error) {
	bytes, err := faucetHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "faucet.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"faucet.html": faucetHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"faucet.html": {faucetHtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
