// Code generated by go-bindata.
// sources:
// faucet.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _faucetHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x5a\x7b\x73\xe3\x36\x92\xff\xdb\xf3\x29\x3a\xdc\xf1\x4a\x3a\x8b\x0f\xc9\x8f\xf1\x48\xa2\x52\xb3\x93\xdd\xdc\xdc\x5d\x1e\x95\x4c\xea\x76\x2b\x9b\xba\x02\xc9\x96\x88\x31\x08\x30\x00\x28\x59\xe3\xd2\x77\xbf\x02\x40\x52\xd4\xc3\x9e\x47\xb2\x77\xf1\x1f\x32\xf1\xea\x6e\x74\xff\x1a\xdd\x68\x72\xf6\xc5\x57\xdf\xbd\x7e\xfb\x8f\xef\xff\x0a\xb9\x2e\xd8\xfc\xd9\xcc\xfc\x03\x46\xf8\x32\xf6\x90\x7b\xf3\x67\x67\xb3\x1c\x49\x36\x7f\x76\x76\x36\x2b\x50\x13\x48\x73\x22\x15\xea\xd8\xab\xf4\xc2\xbf\xf5\x76\x03\xb9\xd6\xa5\x8f\xbf\x56\x74\x15\x7b\x7f\xf7\x7f\x7a\xe5\xbf\x16\x45\x49\x34\x4d\x18\x7a\x90\x0a\xae\x91\xeb\xd8\x7b\xf3\xd7\x18\xb3\x25\x76\xd6\x71\x52\x60\xec\xad\x28\xae\x4b\x21\x75\x67\xea\x9a\x66\x3a\x8f\x33\x5c\xd1\x14\x7d\xdb\x18\x02\xe5\x54\x53\xc2\x7c\x95\x12\x86\xf1\xc8\x9b\x3f\x33\x74\x34\xd5\x0c\xe7\x77\x3f\xfd\xf8\x15\xfc\x8d\x54\x29\xea\x59\xe8\xba\xec\x28\xa3\xfc\x0e\x72\x89\x8b\xd8\x33\x32\xaa\x49\x18\xa6\x19\x7f\xa7\x82\x94\x89\x2a\x5b\x30\x22\x31\x48\x45\x11\x92\x77\xe4\x3e\x64\x34\x51\xa1\x5e\x53\xad\x51\xfa\x89\x10\x5a\x69\x49\xca\xf0\x32\xb8\x0c\x5e\x84\xa9\x52\x61\xdb\x17\x14\x94\x07\xa9\x52\x1e\x48\x64\xb1\xa7\xf4\x86\xa1\xca\x11\xb5\x07\xe1\xfc\xf3\xf8\x2e\x04\xd7\x3e\x59\xa3\x12\x05\x86\x57\xc1\x8b\x20\xb2\x2c\xbb\xdd\x9f\xc3\xd5\xac\x57\xc1\x52\x88\x25\x43\x52\x52\x65\xb9\xa6\x4a\x7d\xb9\x20\x05\x65\x9b\xf8\x1b\x33\x8e\x52\x12\x3d\x19\x47\xd1\xf0\x32\x8a\x86\x57\x51\x34\xbc\x8e\xa2\xe1\x4d\x14\x9d\xe6\x64\x58\xa9\x54\xd2\x52\x83\x92\xe9\x47\xef\xf0\xdd\xaf\x15\xca\x4d\x78\x19\x8c\x82\x51\xdd\xb0\x3b\x7a\xa7\xbc\xf9\x2c\x74\x04\xe7\xbf\x89\xb6\xcf\x85\xde\x84\xe3\xe0\x2a\x18\x85\x25\x49\xef\xc8\x12\xb3\x86\x93\x19\x0a\x9a\xce\xdf\x8d\xef\x63\x68\x79\x77\x08\x96\xdf\x83\x59\x21\x0a\xe4\x3a\x78\xa7\xc2\x71\x30\xba\x0d\xa2\xa6\xe3\x98\xbe\x65\x60\x8c\x66\x58\x9d\xe5\xa3\x21\xe4\xe3\x21\xe4\x97\xf0\x60\xda\x67\x16\x54\x0e\x00\x13\xd8\x21\x60\xba\x1b\x5c\x23\x5d\xe6\x7a\x02\xe3\x28\xb2\xbd\x5b\xf3\x43\xdc\xea\x54\x30\x21\x27\xf0\xa7\xd1\x22\xba\xbc\xcc\x4e\x2c\xba\xda\x5b\x34\xc9\xc5\x0a\xe5\xfe\xd2\xeb\xd1\x28\xbb\x1d\x7d\x68\x69\xb0\x42\xa9\x69\x4a\x98\x9f\x22\xd7\x28\x6b\xe9\x0b\xca\xfd\xbc\x9e\x3f\x8a\xa2\xf3\xe9\xa9\xde\x55\xee\xba\x33\xaa\x4a\x46\x36\x13\x58\x30\xbc\x77\x5d\x84\xd1\x25\xf7\xa9\xc6\x42\x4d\xc0\x51\x76\x03\x09\x49\xef\x96\x52\x54\x3c\xf3\x4f\xed\xb1\xe9\x5b\x2c\x16\xd3\xcf\x54\x63\x87\x85\xd1\xc2\xe5\x28\xbd\xbd\x86\x2f\x68\x61\x4e\x3f\xc2\xdd\x4a\x80\xee\x24\xbf\x10\xef\x7d\x46\x39\x12\xe9\x2f\x25\xc9\x28\x72\xdd\xd7\xa2\x1c\xb6\xcb\xa3\x73\xf3\xfc\x62\x94\xdc\x5e\xc1\xe8\xca\x34\x6e\xae\x46\x2f\x6f\x23\xb8\xb4\x23\x2f\xc8\xe8\xfa\x05\x81\xab\x1b\xd3\x78\x79\x3b\x8a\x5e\x8c\xe0\x66\x6c\x1a\x09\x46\xe4\xe6\x1a\x5e\xbc\x34\x0d\xcc\xa2\xf1\xf5\x2d\xbc\xb4\xd3\x16\x2f\xa3\xe8\xfa\xca\x2a\x77\xf0\x01\xf1\xd6\x98\xdc\x51\xfd\x07\x96\xf0\x58\x32\x48\x84\xd6\xa2\xf8\x7f\x94\x6f\x41\x99\x46\x39\x81\x52\x8a\x25\xcd\x26\x5f\xfd\xfd\x4d\x41\x96\xf8\x56\x12\xae\x16\x42\x16\xc1\x37\x34\x95\x42\x89\x85\x0e\x5a\xb1\x41\x69\x22\xf5\x6b\x03\x41\xa5\x65\xdc\xab\x65\xef\x0d\x01\x79\xd6\xe9\x76\x8c\x7b\xc3\xaf\xeb\x85\x6f\x37\x25\xc6\x11\x0c\x3a\x5e\x65\xb8\x4a\x54\xaa\x76\xa7\x52\x28\xaa\xa9\xe0\x13\x73\xd6\x13\x4d\x57\x78\x6a\xae\x2a\x09\x3f\x5a\x40\x12\x25\x58\xa5\xf1\xc0\xd5\x12\x26\xd2\x3b\xd7\x67\x43\x77\xd7\x4d\x6b\x27\x5a\xe7\xb4\x5e\x06\x96\x11\x94\x12\x6b\xf2\x50\x92\x2c\xa3\x7c\x39\x81\x9b\xb2\xf6\x58\x28\x88\x5c\x52\x3e\x81\x68\xb7\x64\x16\x36\x07\xdc\x2c\x74\x59\xca\xb3\xb3\x59\x22\xb2\x8d\x3d\x5d\x33\xba\x82\x94\x11\xa5\x62\xef\xe0\x10\xb1\xd9\xc7\xde\x04\x93\x74\x10\xca\x9b\xa1\xbd\x31\x29\xd6\x1e\x58\x46\xb1\xe7\x84\xf0\x1d\x7a\x26\x30\x32\xe2\xd5\x4b\x0e\xe8\x31\x9f\x2d\xfd\xd1\xb8\x19\x3c\x9b\xe5\xa3\x86\x88\xc6\x7b\xed\xdb\x13\xa8\x3d\x7b\xcc\xc1\x4d\xf7\x33\x98\x7c\xd4\xd0\x0d\x33\xba\xaa\xc5\xea\x3c\x1e\x48\xf8\xb8\x10\xb7\x50\x3f\x88\xc5\x42\xa1\xf6\x3b\x32\x75\x26\x53\x5e\x56\xda\x37\x1e\x53\xb6\xe3\x67\x33\xdb\x0b\x34\x8b\xbd\x4a\x32\xaf\xce\xd5\xec\xa3\x36\xa0\xb2\x5b\xf1\x1a\x12\x06\xb7\xbe\xd1\xa4\x14\xcc\x83\x92\x91\x14\x73\xc1\x32\x94\xb1\xf7\xa3\x48\x29\x61\xc0\x51\xaf\x85\xbc\x83\x9f\x7e\xf8\x2f\xa8\x55\x4e\xf9\x12\x36\xa2\x92\xf0\x9f\x62\x4d\x18\x01\x92\x65\x06\x6c\x41\x10\x74\xc4\xb0\xc8\x3b\x16\xd4\x4f\x34\xdf\xcd\x3a\x9b\x25\x95\xd6\xa2\x9d\x98\x68\x0e\x89\xe6\x7e\x86\x0b\x52\x31\x0d\x99\x14\x65\x26\xd6\xdc\xd7\x62\xb9\x34\x49\xa9\xdb\x82\x5b\xe4\x41\x46\x34\xa9\x87\x62\xaf\x99\xeb\x01\x91\x94\xf8\x39\x51\xa5\x28\xab\x32\xf6\xb4\xac\xb0\xee\xc4\xfb\x92\xf0\x0c\xb3\xd8\x5b\x10\xa6\xd0\x9b\x7f\x4d\x57\x08\x05\x82\x35\xe3\xd9\x8c\xb6\x7a\x21\xb0\x20\x7e\x4a\x24\x6a\xbf\x4b\x94\x66\x19\xf2\x9a\xa4\xb5\xff\x2c\x74\xc2\xb8\x2d\x41\xfd\x37\xab\x58\x43\xa9\xdd\x42\x81\xbc\x82\xbd\x96\x2f\x4d\x98\xf1\xe6\x0f\x0f\x92\xf0\x25\xc2\x73\x9a\xdd\x0f\xe1\x39\x29\x44\xc5\x35\x4c\x62\x08\x5e\xd9\x47\xb5\xdd\xee\x51\x07\x98\x31\x3a\x9f\x91\xa7\xc0\x09\x82\xa7\x8c\xa6\x77\xb1\xa7\x29\xca\xf8\xe1\xc1\x10\xdf\x6e\xa7\xf0\xf0\x40\x17\xf0\x3c\xf8\x01\x53\x52\xea\x34\x27\xdb\xed\x52\x36\xcf\x01\xde\x63\x5a\x69\xec\x0f\x1e\x1e\x90\x29\xdc\x6e\x55\x95\x14\x54\xf7\x9b\xe5\xa6\x9f\x67\xdb\xad\x91\xb9\x96\x73\xbb\x85\xd0\x10\xe5\x19\xde\xc3\xf3\xe0\x7b\x94\x54\x64\x0a\xdc\xfc\x59\x48\xe6\xb3\x90\xd1\x79\xbd\x6e\x5f\x49\x61\xc5\x76\x78\x09\x0d\x60\x5a\x94\x5b\xa7\xb1\xa2\x76\x25\x3d\xe1\x03\x4b\xbf\x95\xbe\xc6\x83\xa2\x1a\xef\x70\x13\x7b\x0f\x0f\xdd\xb5\xf5\x68\x4a\x18\x33\x71\x26\xf6\xdc\xd6\xda\x45\xef\xd1\xe0\x74\x45\x95\xbd\xfd\xcc\x1b\x09\x76\x62\x7f\xa4\x53\x1f\x1c\x3b\x5a\x94\x13\xb8\x1c\x3f\x71\xe6\xa8\xc2\xbf\xf4\xe6\x87\xd0\x93\xe6\xbe\xf0\x08\xe6\xc0\x39\x97\x71\xf1\x12\x51\xba\x14\xd2\x68\x0f\x6c\xb3\x23\xdc\x47\x32\x33\x2a\x48\x88\xc2\x8f\xe1\x68\xa3\xc4\x8e\xa3\x6d\x7e\x06\xcb\x1c\x89\xd4\x09\x12\xfd\x31\x3c\x17\x15\xcf\x3a\xbb\x34\xce\xfa\xe9\x1c\x2b\x4e\x57\x28\x15\xd5\x9b\x8f\x65\x89\xd9\x8e\xa7\x6b\xff\x8b\x20\x70\x18\x76\x2e\xe7\xff\x2e\xd6\x90\x09\x54\xa0\x73\xaa\xc0\x1c\xc0\x5f\xce\xc2\xfc\xb2\x9d\x52\xce\xdf\x9a\x01\x7b\x6c\x2d\x6c\xf4\x01\xaa\x40\x56\xdc\x1e\xce\x82\x83\xce\x11\x1e\x1e\x82\x6f\xdd\xe9\xbd\xdd\x36\xe7\x78\x00\x6f\x85\x89\xda\x2b\xe4\x1a\x0a\xc2\x68\x4a\x45\xa5\x80\xa4\x5a\x48\x05\x0b\x29\x0a\xc0\xfb\x9c\x54\x4a\x1b\x42\x84\x31\x20\x2b\x42\x19\x49\x18\x5a\x1d\x28\x10\x12\x48\x9a\x56\x45\x65\xb2\x0e\xbe\x04\xe4\xa2\x5a\xe6\x4e\x14\x2d\xc0\x1d\x5e\x4c\xf0\x65\x2b\x8e\x2a\x49\x01\x44\x6b\x92\xde\xa9\x21\x48\xfc\xb5\x42\xa5\x15\x10\x89\xa0\x29\x66\x66\x55\x2a\x8a\x42\x70\xb8\x94\x19\x94\x44\xea\x0d\xa8\xfd\xe8\x43\xd2\xd4\x9e\x84\x01\xbc\xe2\x1b\xc1\x11\x72\xb2\xb2\x02\xc2\x5b\x77\x95\x1b\xc2\xd7\xf6\xb2\x7c\x61\xe4\xfb\x1b\x49\x31\x11\xa2\x5d\x06\x05\xd9\x34\x7c\xeb\x5d\xac\xa9\xce\xa9\x53\x53\x89\xb2\x30\x34\x32\x60\xb4\xa0\x5a\x05\xb3\xb0\xdc\x85\xdb\xdd\x41\xce\xfc\x5c\x48\xfa\xde\xc4\x40\x76\xd2\xc6\xe3\xa8\x63\x63\xb3\x56\x37\xb3\xea\x7c\x8a\x54\x5a\x4c\x8f\x91\x59\xdf\x46\x4f\xc1\xb2\x21\x60\xaf\x25\xe6\x90\x9a\xc0\xa5\x4b\x60\x5c\xf0\xc9\x74\x87\x5d\x76\x20\x14\xc3\x85\x9e\xc0\xed\x6d\x79\x3f\x85\x83\x2c\xa8\x16\xd5\x82\xfe\xad\x38\xd0\xcd\x8a\x76\xd4\x5a\x90\x3b\x04\x02\x33\x72\x50\xa1\xa8\x85\xb6\x77\x5d\x6a\xcb\x3f\xa1\x5e\x23\xea\x2f\x4d\x34\x8a\x7f\x70\x04\x29\x5f\x9e\x8f\x23\x07\x50\xf3\x60\xc8\x9f\x8f\x23\xca\xb5\x38\x1f\x47\xd1\x7d\xf4\x91\x7f\xe7\xe3\x48\xf0\xf3\x71\xa4\x73\x3c\x1f\x47\xe7\xe3\xcb\x2e\xb4\x5d\x8f\xcb\x45\xcc\x1c\x54\x86\x57\x83\x77\x0f\x34\x91\x4b\xd4\xb1\xf7\x3f\x24\x11\x95\x9e\x24\x8c\xf0\x3b\x6f\x6e\x85\x35\xf1\xc9\x42\xe1\x54\x3e\x03\x25\x51\x06\x15\x46\x5a\x0b\x94\xba\xcc\xa5\xa0\xaf\x2a\x69\xef\x29\x06\x82\x66\xbf\xd6\x57\x79\xcf\x00\xcd\x28\x65\x10\xcc\x12\x19\xce\xed\xcf\x6b\x51\x6e\x7c\x4b\xc9\xd2\x38\xd2\xa3\xaa\x4a\x73\xcb\x08\xba\xfa\x24\x26\xf5\x65\xa8\xc2\xdb\xe8\xfa\xf6\xe6\xc9\x1d\x28\x93\x98\xd9\x6d\xb4\x62\x92\x44\xac\x10\x5c\x1a\x98\x88\x7b\x20\x3c\x83\x05\x95\x08\x64\x4d\x36\x5f\xcc\xc2\xcc\x26\xdd\x4f\x62\x14\xf6\x10\x74\x55\x83\xe5\x00\xb6\xae\x3a\xe5\x97\xac\x52\x26\x4f\xa5\xc6\x61\xff\x50\x18\x76\x27\x02\x7c\xcf\x2a\x35\x84\xb2\x4a\x18\x55\x39\x10\xe0\xb8\x86\x99\xd2\x52\xf0\xe5\xdc\xf6\xa6\xe6\x52\x62\x9b\x50\x0a\xa5\x1f\x07\x04\x16\x09\x66\xd9\x09\x48\xfc\x16\x44\x18\x96\xd6\x8a\xff\xf7\x16\x5c\xd4\xe7\xe4\x1f\xca\x6a\xcd\xe1\xfd\x07\x36\xd9\x91\x13\xaf\xd7\xeb\xa0\x51\xa6\xf5\xe0\x1c\x59\x19\x9a\xa0\x56\x71\xaa\x37\xa1\x3b\x0c\x05\x0f\xbf\xa4\x59\x3c\xbe\x1d\xdf\xdc\x8c\xaf\x5e\xde\x5e\x5f\x8f\x6f\xaf\xae\x1f\x73\xef\x16\x17\x9f\xef\xdd\x2e\x81\xfe\x56\xbc\xaa\x74\xde\x66\xcf\x0e\x32\x35\x0e\xec\xd5\x21\x33\xb7\x0f\xe9\x7d\x36\x8c\x2a\x6e\x92\x40\x9f\xb0\x93\xc9\xdc\x27\x00\xc9\x22\xe9\x09\xc9\x3e\x8c\xae\xd1\x53\xe8\x6a\x10\x64\xc0\x22\x2a\x6d\x76\x98\x23\xd7\x34\x25\xc6\x36\x2d\xa2\x86\xa0\x68\x51\xb2\x0d\xa4\x3b\xab\x9f\x82\xd6\xa3\x26\xf9\x20\xb2\xf6\x8d\xe6\x70\x66\xf3\xb9\x42\x64\x68\x12\x39\x55\xa9\x14\x4b\xfb\x22\xc6\x64\x47\x7f\xd9\xbc\x27\x5c\x53\x8e\x4d\x16\x15\xc0\x77\x9c\x6d\xa0\x52\x08\x0b\x21\x21\xc3\xa4\x5a\x2e\x6d\xe6\x27\xa1\x94\x74\x45\x34\x36\xa9\x93\xaa\x31\xd1\x42\xa2\x73\xa3\x31\x49\x2c\xeb\xe4\x94\xff\x10\x15\xa4\x84\x83\x96\x24\xbd\x73\xce\x52\x49\x69\x9c\xa5\x44\xb7\x9b\x36\x79\x4b\x90\x89\xb5\x9d\xe2\xf6\xbd\xa0\xc8\x6c\x26\xa7\x10\x21\x17\x6b\x28\xaa\xd4\x7a\xa4\xc9\xd4\xec\x26\xd6\x84\x6a\xa8\xb8\xa6\xcc\x69\x53\x57\x92\x9b\xbc\x0f\xf7\x12\xae\xa3\x3b\xdf\x0c\x8b\xf9\xdb\x1c\x4f\x64\xb9\xed\x6d\x0d\x24\xbe\x76\xd3\xa1\x94\x42\x63\x6a\xcc\x09\x64\x49\x28\x57\xc6\x22\x36\xa5\xc3\xe2\x23\x6e\x73\xed\x53\xfd\xb0\xab\xf8\xdb\xe1\x30\x84\xaf\x99\x48\x08\x83\x95\xc1\x79\xc2\x4c\x82\x2e\x20\x17\x66\xeb\x1d\x6d\x29\x4d\x74\xa5\x40\x2c\x6c\xaf\x93\xdc\xac\x5f\x11\x69\x2c\x88\x45\xa9\x21\xae\xab\x62\xa6\x4f\xa1\x5c\xd5\xd5\x6c\xd3\x34\x37\xf6\xbd\xf1\x56\xeb\x31\xfc\xfc\xcb\xf4\x59\x2d\xca\x57\xb8\xb0\x90\x30\xe8\x76\x5b\xd6\x39\xd1\x90\x4a\x24\x1a\x15\xa4\x4c\xa8\x4a\x3a\x09\x33\x29\x4a\x30\x52\x36\x94\x1a\xca\x66\xa0\xb4\xdc\x1a\x22\xfd\x9c\xa8\x7c\x50\x17\xf5\x24\x5a\x2b\xb5\x63\x4d\xff\x99\x41\x5d\xdf\x10\xa0\x71\x34\x05\x3a\x6b\xe8\x06\x0c\xf9\x52\xe7\x53\xa0\x17\x17\xed\xe4\x33\xba\x80\x7e\x33\xe3\x67\xfa\x4b\xa0\xef\x03\xc3\x05\xe2\x18\xba\xdc\x2c\xc3\x9a\x8e\x2a\x19\x4d\xb1\x4f\x87\x30\x72\x45\x50\xf3\x97\x48\x24\x77\x4d\xab\xb6\xa3\xfb\x67\x7f\xb7\xd3\x7d\xcd\x58\xe5\xef\xe9\xc6\xdd\xf9\x15\x10\x58\x52\xa5\xa1\x92\x0c\x6a\x1f\x76\x26\x68\x0d\x62\xe7\x75\xb5\x72\x84\xcb\xfa\xa1\xc6\x54\xb3\x05\x47\x26\x50\xc8\xb3\xfe\x7f\xfc\xf8\xdd\xb7\x81\xd2\x92\xf2\x25\x5d\x6c\xfa\x0f\x95\x64\x13\x78\xde\xf7\xfe\x54\x49\xe6\x0d\x7e\x8e\x7e\x09\x56\x84\x55\x38\xb4\xf6\x9e\xd8\xdf\x23\x2e\x43\xa8\x1f\x27\xb0\xcf\x70\x3b\x18\x4c\x4f\xd7\x47\x3a\xe5\x1c\x89\x0a\x75\xdf\x4c\x6c\x81\x7f\xa8\x23\x02\x05\xea\x5c\x58\xd7\x95\x98\x0a\xce\x31\xd5\x50\x95\x82\xd7\x2a\x01\x26\x94\xda\x01\xb1\x99\x11\x1f\x83\xa2\x9e\x1f\xdb\x68\xfd\xdf\x98\xfc\x28\xd2\x3b\xd4\xfd\x7e\x7f\x4d\x79\x26\xd6\x01\x13\xee\xa0\x0d\x8c\x93\x8a\x54\x30\x88\xe3\x18\xea\x18\xea\x0d\xe0\x4b\xf0\xd6\xca\x44\x53\x0f\x26\xe6\xd1\x3c\x0d\xe0\x02\x0e\x97\xe7\x26\xe0\x5f\x80\x17\x92\x92\x7a\x03\xe7\x0e\x8d\xe2\x05\x2f\x50\x29\xb2\xc4\xae\x80\xf6\xb2\xdb\x82\xcc\xec\xa3\x50\x4b\x88\xc1\x1a\xa8\x24\x52\xa1\x9b\x12\x64\x44\x93\x06\x6d\x06\xb3\x76\x5a\x1c\x03\xaf\x18\xdb\x81\xd4\x39\xc5\xb4\x81\xdf\xde\xf4\xc0\x45\x9a\x2f\xe2\x18\x2a\x9e\x59\x15\x67\xbb\x95\xc6\xf8\xae\x96\x31\x08\x4c\x5c\xe8\x5b\xe6\x6f\xb8\xde\x2d\x1d\x0c\xa6\x5d\x5c\xef\xd1\xc5\xec\x43\x84\x31\x6b\x28\xef\xd6\x3c\x42\xd0\x96\x8a\x9e\xa2\xe7\x4a\x4b\x1d\x72\xb6\xe3\x11\x6a\xbc\x2a\x12\x94\x4f\x91\x73\x75\xa3\x53\xfb\x76\x6b\x87\x30\xba\x79\x6c\xf3\x28\xa5\x78\x94\x38\x17\x7a\xd3\x7f\x60\x64\x63\x72\x27\xe8\x69\x51\xbe\xb6\x35\xd0\xde\xd0\xc6\xde\x09\xb4\x14\x86\xb6\x7c\x3c\x81\x9e\x6d\x99\x71\x5a\xa0\x5d\x75\x1d\x45\xd1\x10\x9a\xb7\x26\x7f\x21\xc6\x1d\x65\x85\xdb\x47\xe4\x51\x55\x9a\x9a\x0c\xe0\xb7\x48\x54\xd3\x68\x65\xaa\xdb\xbf\x41\xaa\x36\x4a\xec\x89\x05\x7f\xfe\x33\x1c\x8d\xee\x03\x3a\x0c\xe1\x1b\x22\xef\x6c\xb5\xa7\x94\xb8\xb2\x15\xa1\x76\x7e\x41\x95\xb2\xa5\x16\x05\x99\xe0\x58\xaf\xf9\xb4\x00\x70\x24\x63\x3d\x0d\xe6\x10\x1d\x0a\x68\x0e\xc6\x4e\x80\x38\x11\x37\x3a\x74\xf7\x43\xc2\xd9\xb6\xcb\x6f\x6f\x25\x2d\x10\xbe\x88\xc1\xf3\xba\x8b\x8f\x66\x98\x09\x2d\xb1\x33\x85\xfa\xad\xb3\x45\xbf\x8e\x93\xa7\xa2\xd8\x60\x08\x97\x51\x14\x0d\x8e\x84\xd8\xee\xd4\xfb\xaa\x34\x09\x14\x10\xbe\xb1\x87\x63\xab\x5b\x9b\x42\x9a\x64\xc8\x1c\x6e\x0c\x52\xc1\x98\xcb\x5e\xea\xa5\x46\xc1\x75\x69\x2c\x06\x7f\x34\x3d\x11\x4f\x3b\x9a\xec\x6c\xed\xd0\x3c\x27\x74\x7f\x68\xa2\x7d\x9d\x1d\x4c\xf6\x47\x7b\x46\xd9\xb3\xd7\x69\xc3\x9c\xb5\x72\xd3\x9d\x46\x0f\xcc\xb5\xb3\xd7\xa1\xce\x3a\xf2\x3b\x3a\x17\xa3\x8f\xdc\x46\x3b\x5c\x56\x2a\xef\x1f\x08\x3a\x98\x1e\xdb\xe6\x8d\x46\x69\xf2\x65\x61\x82\x97\xb1\x85\xb9\x12\x48\x3c\x32\x89\x4d\xda\x25\xfa\x12\x79\x86\xb2\x49\x2e\x5c\x8e\x6f\x52\xc1\x3d\x93\xb9\x2b\x66\x17\x4e\x9f\xe8\x30\x36\x39\x13\x1c\x01\x00\x0e\x9c\xc0\x02\x75\x0f\xa9\x66\x32\x32\x52\x2a\xcc\x20\x06\xf7\x79\x49\x7f\x10\x54\x9c\xde\xf7\x07\x7e\xdd\x3e\xa4\xd1\x8c\x4f\xdb\xeb\x62\x23\xf6\x45\x0c\xde\x4c\x4b\xa0\x59\xdc\xf3\xe0\xe2\x94\x0b\x9a\xf8\xdb\x9b\xef\x24\xe8\x2e\x05\x98\xe9\x6c\x6e\x6b\xdc\xee\xde\xf6\x4f\xaf\xfb\x66\xbf\x92\xac\x7f\x44\x96\xac\x88\x26\xd2\x52\x1d\x4c\x3b\x1f\x02\xd4\x17\xc6\xd4\x18\x67\x0a\xee\x66\x6a\x4b\xe9\xd0\x7c\x34\xe2\x5a\x89\x90\x19\x4a\x5f\x92\x8c\x56\x6a\x02\x57\xe5\xfd\xf4\x9f\xcd\x4b\x9c\x59\xa8\xb3\xa7\x45\x2d\x25\xce\x8f\x24\xaa\x4b\xc7\x17\xe0\xcd\x42\x33\xe1\x43\x64\xda\xcd\x76\x5f\x9e\xc3\x89\x77\x73\xd0\xbe\xda\xae\xfb\x0b\x9a\x65\x0c\x8d\xc0\x3b\xf2\xc6\x19\x8d\xfd\xbb\x2e\xb5\xcf\x12\xea\x77\x12\xbb\x35\x5b\x40\xa6\xf0\x89\x05\xed\xeb\x8d\x9e\x01\x80\x6f\xb6\x4c\xad\xce\xeb\x4b\xb7\xed\x96\x3d\xab\x8b\xfa\x23\xa5\xac\x92\x36\xeb\xea\xfb\x35\xc0\x86\xd0\x53\x26\x0b\xcc\x54\x6f\x10\xe4\x55\x41\x38\x7d\x8f\x7d\x13\x97\x06\x4e\x57\xf6\x7d\x89\x77\x7c\x24\x1f\x09\xb3\x7b\x09\xd2\x6b\x62\x5c\xaf\x56\x62\xaf\xb1\xee\xd5\xee\x8e\x3f\x81\x68\xda\xfb\x44\x0d\x9d\xe6\xe2\x27\x44\x42\xb7\xe1\x37\xc1\x17\xa4\x30\xdc\x9b\xb1\x84\xc8\x9e\xab\x68\xd8\x4c\x9d\x8b\x75\xdc\xbb\x8c\x5a\x21\x9d\xa1\xad\x9d\x7b\x35\xd6\x8e\x8c\x61\xa4\x6c\x5c\x73\x0e\x97\xd1\xef\x21\xad\xab\x8a\x1c\xec\x40\x4b\x5a\x62\x06\x24\xd5\x74\x85\xff\x82\x8d\xfc\x0e\x4a\xfe\x64\x11\x0d\x0e\x1b\xe5\x59\x98\xee\xc9\x6b\x46\x5b\xdd\xfe\x9b\xf1\x37\x08\xad\x86\x2f\xc0\x3b\xb9\x91\x47\x91\x78\x30\xf1\xc0\xb5\x1f\xf7\xfb\x59\xa8\xe5\x6e\x68\xdb\xc9\x76\x9b\x93\xc4\x1b\x04\xb9\x2e\x58\xdf\x9b\x69\xfb\x91\x8b\x91\xb9\xa5\x60\x09\xb8\xee\xfd\x94\x6e\xbb\x7f\xa5\x31\x37\x79\x3c\xb8\x71\x41\x27\x39\x69\x6f\x65\x4d\x26\x02\xdb\xdd\xb7\x40\x61\x08\x3f\x6a\x22\x35\x10\xf8\xe9\x0d\x54\x65\x46\xb4\x89\x5e\x02\x4c\x7c\x74\x05\xe8\xe6\x63\xa1\x84\x48\x05\x0b\x21\xd7\x44\x66\x75\xa5\x46\xe7\xb8\xb1\x2f\xea\x9a\xd4\x4f\xa1\x7e\x63\x4e\xb1\x15\x61\xfd\xa3\x1b\xe0\xf3\x7e\x2f\xe8\x9a\xbc\x37\x08\x90\xa4\xf9\xf1\x44\x1b\xb1\x5a\xbe\x31\x7c\x6b\xaf\x00\xfd\xe7\x7d\x9d\x53\x35\x08\x88\xd6\xb2\xdf\xdb\x03\x43\x6f\x60\xec\x3a\xea\x5c\xce\xda\xe5\xb3\x3d\xb7\x7a\x8a\xc6\x2e\x99\x6e\x13\x81\x66\x7a\xaa\x54\xdf\xe1\xaa\x37\xec\xd0\xde\x87\x55\xef\xbc\xd7\x1a\x6a\xe7\xde\xbb\x7d\xc4\x27\x25\xd9\x23\xdd\x33\x5e\xd6\x3b\x62\x4f\xb2\xec\xb5\xf1\x9f\xbe\x77\xc2\xd3\x0f\xd1\x31\x68\x95\xed\xce\xeb\x27\xb5\xec\x3e\xcc\x78\x44\xc5\x34\xeb\x0d\x02\x55\x25\xae\x4a\xd1\xbf\x6e\x2f\x60\xcd\x34\x0b\xde\xc3\x50\x70\x94\x50\x18\x16\xfb\x49\x85\x7f\x90\x84\x3c\x11\x35\x6a\x96\x6e\x57\xdb\xa1\x51\x78\x34\x68\x8b\x5c\x7f\x55\x26\xb9\x72\x6f\x01\xd6\x98\x28\x5b\x53\x80\x1a\xef\xb6\xae\xe3\xea\x37\xaf\xbe\x7f\xd3\xa9\xe1\xb4\x1e\xd1\xb7\xd4\xdb\x2f\x6c\x4f\x55\x4c\x4e\x7e\xd2\xbb\x5e\xaf\xeb\xaf\xaf\x6d\x39\xbf\x2d\xa9\x84\xa4\xa4\xc1\x3b\xe5\x01\x51\x1b\x9e\x42\x86\x0b\x94\xf3\x0e\xf9\xba\xce\x32\x0b\xdd\x27\x6d\xb3\xd0\x7d\xa2\xff\xbf\x01\x00\x00\xff\xff\x93\x17\x2c\xef\xb3\x2f\x00\x00")

func faucetHtmlBytes() ([]byte, error) {
	return bindataRead(
		_faucetHtml,
		"faucet.html",
	)
}

func faucetHtml() (*asset, error) {
	bytes, err := faucetHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "faucet.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"faucet.html": faucetHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"faucet.html": {faucetHtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
